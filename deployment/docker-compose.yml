version: '3.8'

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: login-api
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
    env_file:
      - ../backend/.env
    ports:
      - "5000:5000"
    volumes:
      - ../backend:/app
    networks:
      - login-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: login-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - login-network

  nginx:
    image: nginx:alpine
    container_name: login-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - login-network

networks:
  login-network:
    driver: bridge